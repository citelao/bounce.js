// Generated by CoffeeScript 1.6.3
(function() {
  var BounceEasing, Easing,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Easing = require("./index");

  BounceEasing = (function(_super) {
    __extends(BounceEasing, _super);

    BounceEasing.prototype.bounces = 4;

    BounceEasing.prototype.stiffness = 3;

    function BounceEasing(options) {
      var threshold;
      if (options == null) {
        options = {};
      }
      BounceEasing.__super__.constructor.apply(this, arguments);
      if (options.stiffness != null) {
        this.stiffness = options.stiffness;
      }
      if (options.bounces != null) {
        this.bounces = options.bounces;
      }
      this.alpha = this.stiffness / 100;
      threshold = 0.005 / Math.pow(10, this.stiffness);
      this.limit = Math.floor(Math.log(threshold) / -this.alpha);
      this.omega = this.calculateOmega(this.bounces, this.limit);
    }

    BounceEasing.prototype.calculate = function(ratio) {
      var t;
      if (ratio >= 1) {
        return 1;
      }
      t = ratio * this.limit;
      return 1 - this.exponent(t) * this.oscillation(t);
    };

    BounceEasing.prototype.calculateOmega = function(bounces, limit) {
      return (this.bounces + 0.5) * Math.PI / this.limit;
    };

    BounceEasing.prototype.exponent = function(t) {
      return Math.pow(Math.E, -this.alpha * t);
    };

    BounceEasing.prototype.oscillation = function(t) {
      return Math.cos(this.omega * t);
    };

    BounceEasing.prototype.serialize = function() {
      return {
        stiffness: this.stiffness,
        bounces: this.bounces
      };
    };

    return BounceEasing;

  })(Easing);

  module.exports = BounceEasing;

}).call(this);
