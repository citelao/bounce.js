// Generated by CoffeeScript 1.6.3
(function() {
  var Component, Matrix4D, Rotate, Vector2D,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Matrix4D = require("../math/matrix4d");

  Vector2D = require("../math/vector2d");

  Component = require("./index");

  Rotate = (function(_super) {
    __extends(Rotate, _super);

    Rotate.prototype.from = 0;

    Rotate.prototype.to = 90;

    function Rotate() {
      Rotate.__super__.constructor.apply(this, arguments);
      this.diff = this.to - this.from;
    }

    Rotate.prototype.getMatrix = function(degrees) {
      var c, radians, s;
      radians = (degrees / 180) * Math.PI;
      c = Math.cos(radians);
      s = Math.sin(radians);
      return new Matrix4D([c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
    };

    Rotate.prototype.getEasedMatrix = function(ratio) {
      var easedAngle, easedRatio;
      easedRatio = this.calculateEase(ratio);
      easedAngle = this.from + this.diff * easedRatio;
      return this.getMatrix(easedAngle);
    };

    return Rotate;

  })(Component);

  module.exports = Rotate;

}).call(this);
